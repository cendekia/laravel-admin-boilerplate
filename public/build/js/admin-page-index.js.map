{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"admin-page-index.js","sourcesContent":["$(function () {\n    //Widgets count\n    $('.count-to').countTo();\n\n    //Sales count to\n    $('.sales-count-to').countTo({\n        formatter: function (value, options) {\n            return '$' + value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, ' ').replace('.', ',');\n        }\n    });\n\n    initRealTimeChart();\n    initDonutChart();\n    initSparkline();\n});\n\nvar realtime = 'on';\nfunction initRealTimeChart() {\n    //Real time ==========================================================================================\n    var plot = $.plot('#real_time_chart', [getRandomData()], {\n        series: {\n            shadowSize: 0,\n            color: 'rgb(0, 188, 212)'\n        },\n        grid: {\n            borderColor: '#f3f3f3',\n            borderWidth: 1,\n            tickColor: '#f3f3f3'\n        },\n        lines: {\n            fill: true\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        xaxis: {\n            min: 0,\n            max: 100\n        }\n    });\n\n    function updateRealTime() {\n        plot.setData([getRandomData()]);\n        plot.draw();\n\n        var timeout;\n        if (realtime === 'on') {\n            timeout = setTimeout(updateRealTime, 320);\n        } else {\n            clearTimeout(timeout);\n        }\n    }\n\n    updateRealTime();\n\n    $('#realtime').on('change', function () {\n        realtime = this.checked ? 'on' : 'off';\n        updateRealTime();\n    });\n    //====================================================================================================\n}\n\nfunction initSparkline() {\n    $(\".sparkline\").each(function () {\n        var $this = $(this);\n        $this.sparkline('html', $this.data());\n    });\n}\n\nfunction initDonutChart() {\n    Morris.Donut({\n        element: 'donut_chart',\n        data: [{\n            label: 'Chrome',\n            value: 37\n        }, {\n            label: 'Firefox',\n            value: 30\n        }, {\n            label: 'Safari',\n            value: 18\n        }, {\n            label: 'Opera',\n            value: 12\n        },\n        {\n            label: 'Other',\n            value: 3\n        }],\n        colors: ['rgb(233, 30, 99)', 'rgb(0, 188, 212)', 'rgb(255, 152, 0)', 'rgb(0, 150, 136)', 'rgb(96, 125, 139)'],\n        formatter: function (y) {\n            return y + '%'\n        }\n    });\n}\n\nvar data = [], totalPoints = 110;\nfunction getRandomData() {\n    if (data.length > 0) data = data.slice(1);\n\n    while (data.length < totalPoints) {\n        var prev = data.length > 0 ? data[data.length - 1] : 50, y = prev + Math.random() * 10 - 5;\n        if (y < 0) { y = 0; } else if (y > 100) { y = 100; }\n\n        data.push(y);\n    }\n\n    var res = [];\n    for (var i = 0; i < data.length; ++i) {\n        res.push([i, data[i]]);\n    }\n\n    return res;\n}"]}